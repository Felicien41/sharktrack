# Run with $ python3 compute_maxn_test.py

import unittest
import pandas as pd
from io import StringIO
from compute_maxn import compute_species_max_n

_ORIGINAL_CSV = """video_path,video_directory,video_name,frame,time,track_metadata,track_id,xmin,ymin,xmax,ymax,confidence,label
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,732,02:26:40,2020_RS_004/100GOPRO/GH044053.MP4/41,0,2176.754638671875,971.7913818359376,2448.932861328125,1123.95556640625,0.7320560216903687,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,733,02:26:60,2020_RS_004/100GOPRO/GH044053.MP4/41,0,2168.2119140625,979.8026123046876,2517.978271484375,1127.115966796875,0.3091546893119812,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,734,02:26:80,2020_RS_004/100GOPRO/GH044053.MP4/41,0,2140.833740234375,980.6898803710938,2597.77734375,1117.2523193359375,0.4811236262321472,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,737,02:27:40,2020_RS_004/100GOPRO/GH044053.MP4/41,0,2369.663330078125,970.8999633789062,2680.369140625,1120.014404296875,0.5860422253608704,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,738,02:27:60,2020_RS_004/100GOPRO/GH044053.MP4/41,0,2525.79736328125,969.9281005859376,2704.0,1107.4984130859375,0.4732677936553955,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,2481,08:16:20,2020_RS_004/100GOPRO/GH044053.MP4/82,1,2045.9197998046875,648.0831298828125,2228.302734375,812.7382202148438,0.6118413209915161,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,2483,08:16:60,2020_RS_004/100GOPRO/GH044053.MP4/82,1,2053.255126953125,682.0084228515625,2210.0751953125,843.6190185546875,0.7077721357345581,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,2484,08:16:80,2020_RS_004/100GOPRO/GH044053.MP4/82,1,2022.0108642578125,711.1607666015625,2168.082763671875,862.452392578125,0.5985627770423889,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,2532,08:26:40,2020_RS_004/100GOPRO/GH044053.MP4/85,2,1044.260498046875,1033.3619384765625,1725.0572509765625,1250.5924072265625,0.4391069710254669,elasmobranch
2020_RS_004/100GOPRO/GH044053.MP4,2020_RS_004/100GOPRO,GH044053.MP4,2533,08:26:60,2020_RS_004/100GOPRO/GH044053.MP4/85,2,1042.4000244140625,1030.4923095703125,1744.7578125,1251.965087890625,0.3137611448764801,elasmobranch
"""

_OUTPUT_MAXN = """video_path,video_name,frame,class,time,n,tracks_in_maxn
2020_RS_004/100GOPRO/GH044053.MP4,GH044053.MP4,732,elasmobranch,02:26:40,1,[0]
"""

class TestComputeSpeciesMaxN(unittest.TestCase):
    def test__compute_species_max_n__one_frame__ok(self):
        original_output_df = pd.read_csv(StringIO(_ORIGINAL_CSV))
        labeled_detections = {0: "elasmobranch"}
        expected_result = pd.read_csv(StringIO(_OUTPUT_MAXN))

        result = compute_species_max_n(original_output_df, labeled_detections)
        
        self.assertEqual(result.to_csv(index=False), _OUTPUT_MAXN)

if __name__ == '__main__':
    unittest.main()